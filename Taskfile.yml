version: '3'

tasks:
  compose:
    desc: "Build and run the webapp stack via docker compose"
    cmds:
      - docker compose -f webapp/docker-compose.yml up -d --build
    silent: false 
    
  bench:
    desc: "Run the private-isu benchmarker and show a readable summary"
    cmds:
      - |
        docker run --rm --network host private-isu-benchmarker /bin/benchmarker -t http://host.docker.internal -u /opt/userdata | \
        jq -r '
          "Pass: \(.pass)",
          "Score: \(.score)",
          "Success: \(.success)",
          "Fail: \(.fail)",
          "Messages:",
          (.messages[]? | "- " + .)
        '
    silent: false

  db:slow:
    desc: "Analyze MySQL slow query log using pt-query-digest"
    cmds:
      - |
        echo "=== MySQL Slow Query Analysis ==="
        if [ -f webapp/logs/mysql/slow.log ]; then
          pt-query-digest webapp/logs/mysql/slow.log
        else
          echo "Slow log file not found. Make sure MySQL is running and slow queries are enabled."
        fi

  db:reset:
    desc: "Reset and clear MySQL slow query log"
    cmds:
      - |
        docker compose -f webapp/docker-compose.yml exec mysql mysql -uroot -proot -e "
          SET GLOBAL slow_query_log = 'OFF';
          FLUSH SLOW LOGS;
          SET GLOBAL slow_query_log = 'ON';
        "
        echo "MySQL slow query log has been reset."

  db:stats:
    desc: "Show MySQL performance statistics"
    cmds:
      - |
        echo "=== MySQL Performance Statistics ==="
        docker compose -f webapp/docker-compose.yml exec mysql mysql -uroot -proot -e "
          SELECT 
            COUNT_STAR as total_queries,
            SUM_TIMER_WAIT/1000000000000 as total_time_sec,
            AVG_TIMER_WAIT/1000000000000 as avg_time_sec,
            DIGEST_TEXT
          FROM performance_schema.events_statements_summary_by_digest 
          WHERE DIGEST_TEXT IS NOT NULL
          ORDER BY total_time_sec DESC 
          LIMIT 10;
        "

  db:top:
    desc: "Show top slow queries in real-time"
    cmds:
      - |
        echo "=== Top 10 Slowest Queries ==="
        if [ -f webapp/logs/mysql/slow.log ]; then
          tail -n 100 webapp/logs/mysql/slow.log | pt-query-digest --limit 10
        else
          echo "Slow log file not found."
        fi

  db:summary:
    desc: "Generate comprehensive database performance summary"
    cmds:
      - task: db:stats
      - task: db:slow
      - |
        echo "=== General Log Summary ==="
        if [ -f webapp/logs/mysql/general.log ]; then
          echo "Total queries in general log: $(wc -l < webapp/logs/mysql/general.log)"
        else
          echo "General log file not found."
        fi
